name: Continuous Delivery
on:
  push:
    branches:
      - develop
      - staging
      - production

jobs:
  deploy:
    name: Deploy and Build
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout Repository
        uses: actions/checkout@master

      - name: Use Node.js
        uses: actions/setup-node@v1
        with:
          node-version: '12.x'

      - name: Get dependencies cache directory
        id: npm-cache
        run: |
          echo "::set-output name=dir::$(npm config get cache)"

      - name: Cache Dependencies
        uses: actions/cache@v1
        id: cache-dependencies
        with:
          path: ${{ steps.npm-cache.outputs.dir }}
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install Dependencies
        run: npm ci

      - name: Build
        run: npm run affected:deploy -- --base=origin/$GITHUB_BASE_REF~1 --head=origin/$GITHUB_BASE_REF --configuration=$GITHUB_BASE_REF --parallel

      - name: Deploy Portfolio SSR Server
        run: firebase deploy --only functions:ssr --token ${{ secrets.FIREBASE_TOKEN }}
        if: always()

      - name: Deploy Admin Client
        run: firebase deploy --only hostings:admin --token ${{ secrets.FIREBASE_TOKEN }}
        if: always()

      - name: Deploy Portfolio Client
        run: firebase deploy --only hostings:portfolio --token ${{ secrets.FIREBASE_TOKEN }}
        if: always()

